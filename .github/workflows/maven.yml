# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven Build

on:
  push:
    branches: [ development, staging, production ]
  pull_request:
    branches: [ development ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11.0.7
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.7
    - name: Build with Maven
      run: mvn clean install --file Hukoomi/pom.xml
    - name: Check if deployment is needed
      id: deployment_check
      if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/production') }}
      run: |
          echo '::set-output name=should_deploy::true'
  deploy:
    runs-on: ubuntu-latest
    needs: [ 'build' ]
    if: ${{ needs.build.outputs.should_deploy }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Set deployment environments
        run: |
          if [ '${{github.ref}}' = 'refs/heads/development' ]
          then
            echo "DEPLOY_BRANCH=deploy-development" >> $GITHUB_ENV;
          fi
          if [ '${{github.ref}}' = 'refs/heads/staging' ]
          then
            echo "DEPLOY_BRANCH=deploy-staging" >> $GITHUB_ENV;
          fi
          if [ '${{github.ref}}' = 'refs/heads/production' ]
          then
            echo "DEPLOY_BRANCH=deploy-production" >> $GITHUB_ENV;
          fi

      - name: Print Environment variables
        run: |
          echo "$DEPLOY_BRANCH"

      - name: Set global Git user info
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@users.noreply.github.com"

      - name: Checkout deployment branch
        uses: actions/checkout@v2
        with:
          ref: ${{env.DEPLOY_BRANCH}}
          token: ${{secrets.GH_ACTION}}

      - name: Remove old artifacts
        run: |
            rm -rf Hukoomi

      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: Hukoomi
          path: Hukoomi

      - name: Commit changes to Github
        id: commit_change
        run: |
            git add --all Hukoomi/
            git status
            if ! git diff-index --quiet HEAD --; then
              git commit -m "Build from ${{ github.sha }}
                Run Id: ${{ github.run_id }}"
              git push
              echo "::set-output name=has_changes::true"
            fi
      - name: Remove artifacts after deployment
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
              Hukoomi